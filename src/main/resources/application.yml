
server:
  port: 9191

spring:
  datasource:
    platform: "postgres"
    url: "jdbc:postgresql://localhost:5432/arka_arkb_channel_service_db"
    username: "postgres"
    password: "password"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: "validate"

  mail:
    host: "change-me"
    port: 587
    username: "change-me"
    password: "change-me"
    properties:
      mail.smtp.auth: true
      mail.startttls.enable: true

serverInfo:
  name: "Aces ARKA-ARKB Channel Service"
  description: "ACES ARKA to ARKB Channel service for value transfers"
  instructions: >
    After this contract is executed, any ARKA sent to depositArkaAddress will be exchanged for ARKB and
    sent directly to the given recipientArkbAddress less service fees.
  version: "1.1.0"
  websiteUrl: "https://arkaces.com"

  # Uncomment below to override shown capacity, by default the capacity will be set to the amount in the service address
  #  capacities:
  #    -
  #      value: "100000000.00"
  #      unit: "ARKB"
  #      displayValue: "100000000 ARKB"

  inputSchema: >
    {
      "type": "object",
      "properties": {
        "recipientArkbAddress": {
          "type": "string",
          "title": "Recipient ARKB Address",
          "description": "Enter recipient ARKB address to transfer funds to."
        }
      },
      "required": [
        "recipientArkbAddress"
      ]
    }
  outputSchema: >
    {
      "type": "object",
      "properties": {
        "depositArkaAddress": {
          "type": "string",
          "title": "Deposit ARKA Address",
          "description": "Send ARKA to this address to execute contract."
        },
        "recipientArkbAddress": {
          "type": "string",
          "title": "Recipient ARKB Address",
          "description": "ARKB will arrive at this address on contract execution."
        },
        "transfers": {
          "type": "array",
          "title": "Transfers",
          "description": "List of transfers",
          "properties": {
            "id": {
              "type": "string",
              "title": "Transfer ID",
              "description": "Identifier for transfer"
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "The status of the transfer"
            },
            "returnArkaAddress": {
              "type": "string",
              "title": "Return Address (ARKA)",
              "description": "The ARKA address for returns of failed executions."
            },
            "arkaTransactionId": {
              "type": "string",
              "title": "Transaction ID (ARKA)",
              "description": "The transaction ID for the ARKA contract fulfillment"
            },
            "arkaAmount": {
              "type": "string",
              "title": "Transfer Amount (ARKA)",
              "description": "The amount of ARK to transfer"
            },
            "arkbPerArka": {
              "type": "string",
              "title": "ARKB/ARKA Exchange Rate",
              "description": "Amount of ARKB to receive per ARKA"
            },
            "arkaFlatFee": {
              "type": "string",
              "title": "Flat Fee (ARKA)",
              "description": "Fixed fee per execution, charged in ARKA"
            },
            "arkaPercentFee": {
              "type": "string",
              "title": "Percentage Fee (ARKA)",
              "description": "Percentage fee per execution, charged in ARKA"
            },
            "arkaTotalFee": {
              "type": "string",
              "title": "Total Fees (ARKA)",
              "description": "The sum of flat fees and percentage fees, charged in ARKA"
            },
            "arkbSendAmount": {
              "type": "string",
              "title": "Receiving Amount (ARKB)",
              "Description": "Total ARKB to be received, net of fees"
            },
            "arkbTransactionId": {
              "type": "string",
              "title": "Transaction ID (ARKB)",
              "description": "The transaction ID for the ARKB contract fulfillment"
            },
            "createdAt": {
              "type": "string",
              "title": "Create Date",
              "description": "The time the contract was created."
            }
          }
        }
      }
    }
  outputSchemaUrlTemplates:
    -
      property: "depositArkaAddress"
      urlTemplate: "https://explorer.ark.io/address/{value}"
    -
      property: "recipientArkbAddress"
      urlTemplate: "https://explorer.ark.io/address/{value}"
    -
      property: "returnArkaAddress"
      urlTemplate: "https://explorer.ark.io/address/{value}"
    -
      property: "transfers.arkaTransactionId"
      urlTemplate: "https://explorer.ark.io/transaction/{value}"
    -
      property: "transfers.arkbTransactionId"
      urlTemplate: "https://explorer.ark.io/transaction/{value}"

# Ark client configurations for https://github.com/ark-aces/ark-java-client
arkaNetworkConfigPath: "ark_network_config/devnet.yml"
arkbNetworkConfigPath: "ark_network_config/devnet.yml"

arkaUnit: "DARK"
arkbUnit: "DARK"

fees:
  arkaFlatFee: 1
  arkaPercentFee: 1

# Exchange rate is a static value because ARKB will not likely have an active market.
# Set this value to the amount of ARKB you will receive for each ARKA. The default provides 1 ARKB for each 1 ARKA received.
arkbPerArka: 1

arkaListener:
  url: http://localhost:9091

arkaEventCallbackUrl: http://localhost:9191/arkaEvents

serviceArkbAccount:
  address: change_me
  passphrase: change_me

# Arka sweep settings for collecting deposits into a single service account
arkaSweep:
  enabled: false
  arkaAddress: change_me
  runIntervalSec: 86400


# Send notifications on low capacity and transfer completed/failed
notifications:
  enabled: false
  recipientEmailAddress: "change_me"
  fromEmailAddress: "change_me"

# Capacity threshold at which low capacity notifications will be sent
lowCapacityThreshold: "100.00"
