serverInfo:
  name: "Aces ARKA-ARKB Channel Service"
  description: "ACES ARKA to ARKB Channel service for value transfers"
  instructions: >
    After this contract is executed, any ARKA sent to depositArkaAddress will be exchanged for ARKB and
    sent directly to the given recipientArkbAddress less service fees.
  version: "1.0.0"
  websiteUrl: "https://arkaces.com"
  flatFee: "0"
  percentFee: "1.00%"
  # Exchange rate is a static value because ARKB will not likely have an active market. Set this value to the amount of ARKB you will receive for each ARKA. The default provides 1 ARKB for each 1 ARKA received.
  arkbPerArka: "1"
  capacities:
    -
      value: "100000000.00"
      unit: "ARKB"
      displayValue: "100000000 ARKB"
  inputSchema: >
    {
      "type": "object",
      "properties": {
        "recipientArkaAddress": {
          "type": "string"
        }
      },
      "required": [
        "recipientArkbAddress"
      ]
    }
  outputSchema: >
    {
      "type": "object",
      "properties": {
        "depositArkaAddress": {
          "type": "string"
        },
        "recipientArkbAddress": {
          "type": "string"
        },
        "transfers": {
          "type": "array",
          "properties": {
            "arkAmount": {
              "type": "string"
            },
            "arkbPerArka": {
              "type": "string"
            },
            "arkaFlatFee": {
              "type": "string"
            },
            "arkaPercentFee": {
              "type": "string"
            },
            "arkaTotalFee": {
              "type": "string"
            },
            "arkbSendAmount": {
              "type": "string"
            },
            "arkbTransactionId": {
              "type": "string"
            },
            "createdAt": {
              "type": "string"
            }
          }
        }
      }
    }

#spring:
#  datasource:
#    url: "jdbc:h2:/tmp/arka_arkb_channel_service.db;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE"
#    driver-class-name: "org.h2.Driver"
#  jpa:
#    hibernate:
#      ddl-auto: "update"


#spring:
#  datasource:
#    platform: postgres
#    url: jdbc:postgresql://localhost:5432/aces_ark_arkx_channel_db
#    username: service_user
#    password: password
#  jpa:
#    hibernate:
#      ddl-auto: update
#
#flyway:
#  enabled: true

arkaNetworkConfigPath: "ark_network_config/testnet.yml"
arkbNetworkConfigPath: "ark_network_config/testnet.yml"

fees:
  arkaFlatFee: 0
  arkaPercentFee: 1

arkbPerArka: 1

server:
  port: 9191

spring:
  datasource:
    url: "jdbc:h2:/tmp/arka_arkb_channel_service.db;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE"
    driver-class-name: "org.h2.Driver"
  jpa:
    hibernate:
      ddl-auto: "update"

arkaListener:
  url: http://localhost:9091

arkaEventCallbackUrl: http://localhost:9191/arkaEvents

serviceArkbAccount:
  address: change_me
  passphrase: change_me